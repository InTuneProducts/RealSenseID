<Application x:Class="rsid_wrapper_csharp.App"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:local="clr-namespace:rsid_wrapper_csharp"             
             StartupUri="MainWindow.xaml">
    <Application.Resources>
        <SolidColorBrush  x:Key="BgColor0">#121212</SolidColorBrush>
        <SolidColorBrush  x:Key="BgColor1">#212121</SolidColorBrush>
        <SolidColorBrush  x:Key="BgColor2">#424242</SolidColorBrush>
        <SolidColorBrush  x:Key="BgColor3">#616161</SolidColorBrush>
        <SolidColorBrush  x:Key="BorderColor0">#616161</SolidColorBrush>
        <SolidColorBrush  x:Key="BorderColor1">#9e9e9e</SolidColorBrush>
        <SolidColorBrush  x:Key="FgColor">#fafafa</SolidColorBrush>
        <SolidColorBrush  x:Key="FgColor2">#c8c8c8</SolidColorBrush>
        <SolidColorBrush  x:Key="ProgressBrush">#6495ed</SolidColorBrush>
        <SolidColorBrush  x:Key="FailBrush">#c62828</SolidColorBrush>
        <SolidColorBrush  x:Key="SuccessBrush">#43a047
        </SolidColorBrush>
        <Thickness x:Key="BorderThickness">1</Thickness>

        <Style TargetType="{x:Type Window}">
            <Setter Property="Background" Value="{StaticResource BgColor0}"/>
            <Setter Property="Foreground" Value="{StaticResource FgColor}"/>
            <Setter Property="BorderBrush" Value="{StaticResource BorderColor0}"/>
            <Setter Property="BorderThickness" Value="{StaticResource BorderThickness}"/>
        </Style>
        <Style TargetType="{x:Type DockPanel}">
            <Setter Property="Background" Value="{StaticResource BgColor1}"/>
        </Style>
        <Style TargetType="{x:Type Button}">
            <Setter Property="Width" Value="100"/>
            <Setter Property="Height" Value="31" />
            <Setter Property="FontSize" Value="14px" />
            <Setter Property="Background" Value="{StaticResource BgColor2}"/>
            <Setter Property="Foreground" Value="{StaticResource FgColor}"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Button}">
                        <Border Background="{TemplateBinding Background}"
                                BorderBrush="{StaticResource BorderColor0}"
                                BorderThickness="{StaticResource BorderThickness}">
                            <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center"/>
                        </Border>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
            <Style.Triggers>
                <Trigger Property="IsMouseOver" Value="True">
                    <Setter Property="Background" Value="{StaticResource BgColor3}"/>
                </Trigger>
                <Trigger Property="IsEnabled" Value="False">
                    <Setter Property="Opacity" Value="0.4"/>
                </Trigger>
            </Style.Triggers>
        </Style>

        <Style TargetType="{x:Type ToggleButton}">
            <Setter Property="Width" Value="30"/>
            <Setter Property="Height" Value="31" />
            <Setter Property="FontSize" Value="14px" />
            <Setter Property="Background" Value="{StaticResource BgColor2}"/>
            <Setter Property="Foreground" Value="{StaticResource FgColor}"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type ToggleButton}">
                        <Border Background="{TemplateBinding Background}" 
                                BorderBrush="{StaticResource BorderColor0}"
                                BorderThickness="{StaticResource BorderThickness}">
                            <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center"/>
                        </Border>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
            <Style.Triggers>
                <Trigger Property="IsMouseOver" Value="True">
                    <Setter Property="Background" Value="{StaticResource BorderColor0}"/>
                    <Setter Property="Cursor" Value="Hand"/>
                </Trigger>
                <Trigger Property="IsEnabled" Value="False">
                    <Setter Property="Opacity" Value="0.4"/>
                </Trigger>
            </Style.Triggers>
        </Style>

        <Style TargetType="{x:Type TextBox}">
            <Setter Property="Foreground" Value="{StaticResource FgColor}" />
            <Setter Property="CaretBrush" Value="{StaticResource FgColor}" />
            <Setter Property="Background" Value="{StaticResource BgColor2}"/>
            <Setter Property="BorderThickness" Value="{StaticResource BorderThickness}"/>
            <Setter Property="BorderBrush" Value="{StaticResource BorderColor0}"/>
            <Setter Property="Padding" Value="3"/>
            <Setter Property="AllowDrop" Value="true"/>
            <Setter Property="FocusVisualStyle" Value="{x:Null}"/>

            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type TextBox}">
                        <Border  x:Name="border"
                                 BorderBrush="{StaticResource BorderColor0}"
                                 BorderThickness="{StaticResource BorderThickness}">
                            <ScrollViewer x:Name="PART_ContentHost" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
                        </Border>
                        <ControlTemplate.Triggers>

                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter Property="BorderBrush" TargetName="border" Value="{StaticResource BorderColor1}"/>
                            </Trigger>

                            <Trigger Property="IsFocused" Value="True">
                                <Setter Property="BorderBrush" TargetName="border" Value="{StaticResource BorderColor1}"/>
                            </Trigger>

                            <Trigger Property="IsFocused" Value="False">
                                <Setter Property="BorderBrush" TargetName="border" Value="{StaticResource BorderColor0}"/>
                            </Trigger>

                            <Trigger Property="IsMouseOver" Value="False">
                                <Setter Property="BorderBrush" TargetName="border" Value="{StaticResource BorderColor0}"/>
                            </Trigger>

                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <Style TargetType="ScrollBar">
            <Setter Property="Foreground" Value="{StaticResource FgColor}"/>
            <Setter Property="Background" Value="{StaticResource BgColor2}"/>
            <Setter Property="BorderBrush" Value="{StaticResource BorderColor1}"/>
        </Style>

        <Style TargetType="Label">
            <Setter Property="Foreground" Value="{StaticResource FgColor}"/>
            <Setter Property="Background" Value="{StaticResource BgColor1}"/>
            <Setter Property="BorderThickness" Value="0"/>
            <Setter Property="FontSize" Value="16" />
        </Style>

        <Style TargetType="GroupBox">
            <Setter Property="Foreground" Value="{StaticResource FgColor}"/>
            <Setter Property="Background" Value="{StaticResource BgColor1}"/>
            <Setter Property="BorderThickness" Value="0.15"/>
            <Setter Property="BorderBrush" Value="{StaticResource BorderColor0}"/>
            <Setter Property="FontSize" Value="16" />
            <Setter Property="Padding" Value="5px 10px 5px 10px" />
        </Style>
        <Style TargetType="Separator">
            <Setter Property="Background" Value="{StaticResource BgColor2}"/>
            <Setter Property="Height" Value="1"/>
        </Style>

        <!-- Checkbox -->
        <Style TargetType="CheckBox">
            <Setter Property="Foreground" Value="{StaticResource FgColor}"/>
            <Setter Property="Background" Value="{StaticResource FgColor}"/>
            <Setter Property="BorderThickness" Value="{StaticResource BorderThickness}"/>
            <Setter Property="BorderBrush" Value="{StaticResource BorderColor1}" />
            <Setter Property="FontSize" Value="12" />
        </Style>

        <!-- Radio Button -->
        <Style TargetType="{x:Type RadioButton}">
            <Setter Property="FocusVisualStyle" Value="{DynamicResource RadioButtonFocusVisual}"/>
            <Setter Property="SnapsToDevicePixels" Value="true"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type RadioButton}">
                        <BulletDecorator Background="Transparent">
                            <BulletDecorator.Bullet>
                                <Grid Width="13" Height="13" Margin="-3,2,0,0">
                                    <Ellipse x:Name="CheckMark_Border" 
                                             Fill="Transparent" 
                                             Stroke="{StaticResource BorderColor1}" StrokeThickness="1"/>
                                    <Ellipse Margin="4" x:Name="CheckMark" Fill="{StaticResource BgColor1}"/>
                                </Grid>
                            </BulletDecorator.Bullet>
                            <ContentPresenter HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" 
                                              Margin="{TemplateBinding Padding}" 
                                              VerticalAlignment="{TemplateBinding VerticalAlignment}" RecognizesAccessKey="True"/>
                        </BulletDecorator>

                        <ControlTemplate.Triggers>
                            <Trigger Property="IsChecked" Value="True">
                                <Setter Property="Fill" Value="{StaticResource FgColor}" TargetName="CheckMark"/>
                            </Trigger>

                            <Trigger Property="IsMouseOver" Value="true">
                                <Setter Property="Fill" Value="{StaticResource BorderColor1}" TargetName="CheckMark"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <!-- Close dialog - "x" button on top right -->
        <Style x:Key="ButtonCloseDialogKey" TargetType="Button" BasedOn="{StaticResource {x:Type Button}}">
            <Setter Property="Width" Value="24" />
            <Setter Property="FontSize" Value="14" />
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="Button">
                        <!-- show X label-->
                        <Label HorizontalAlignment="Center" VerticalAlignment="Center" Content="&#x2715;" Margin="0" >
                            <Label.Style>
                                <Style TargetType="Label">
                                    <Setter Property="Foreground" Value="{StaticResource BorderColor1}" />
                                    <Style.Triggers>
                                        <Trigger Property="IsMouseOver" Value="True">
                                            <Setter Property="Foreground" Value="{StaticResource FgColor}"/>
                                            <Setter Property="Background" Value="{StaticResource BgColor2}"/>
                                        </Trigger>
                                    </Style.Triggers>
                                </Style>
                            </Label.Style>
                        </Label>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
    </Application.Resources>
</Application>
